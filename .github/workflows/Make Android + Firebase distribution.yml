name: Flutter CI
on: workflow_dispatch
jobs:
#  build_apk:
#   name: Build Flutter (Android)
#   runs-on: ubuntu-latest
#   steps:
#     - name: Send message about start
#       run: curl -s -X POST https://api.telegram.org/${{secrets.TELEGRAM_BOT}}/sendMessage -d chat_id=-569985592 -d parse_mode='HTML' -d text='Start'
#     - uses: actions/checkout@v1
#     - uses: actions/setup-java@v3
#       with:
#         java-version: "17"
#         distribution: 'oracle'
#     - uses: subosito/flutter-action@v2
#       with:
#         channel: "stable"
#       env:
#         KEY_JKS: ${{ secrets.KEYSTORE }}
#         SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
#         SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#         SIGNING_STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
#     - name: Decode Keystore
#       run: |
#         echo "${{secrets.KEYSTORE}}" | base64 --decode > android/key.jks
#     - name: Get dependencies
#       run: flutter pub get
#     - name: Build APK
##       run: flutter build apk --release
#       run: flutter build appbundle -t lib/main.dart
#       env:
#         STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
#         KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#         KEY_ALIAS: ${{ secrets.ALIAS }}
#         STORE_FILE: ../../android/key.jks
#     - uses: actions/upload-artifact@v3
#       with:
#         name: release-apk
#         path: build/app/outputs/bundle/release/app-release.aab
#  beta_apk:
#    name: Upload Android Beta to Firebase App Distribution
#    needs: [build_apk]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Download Artifact
#        uses: actions/download-artifact@master
#        with:
#          name: release-apk
#      - name: Upload APK
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.5.0
#        with:
#          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
#          token: ${{secrets.FIREBASE_TOKEN}}
##          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIAL_FILE_CONTENT }}
#          groups: testers
#          file: app-release.aab
  upload_to_google:
    name: Upload App to Google Play
#    needs: [build_apk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: release-apk
          path: ./output
      - name: Decode Google Service Account Key
        run: |
          pwd
          echo "${{secrets.GOOGLE_SERVICE_ACCOUNT_KEY}}" | base64 --decode > ./android/fastlane/google-console-service-account-private-key2.json
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          working-directory: 'android'
      - name: Run Fastlane
        uses: maierj/fastlane-action@v3.0.0 #Use this plugin developed by the community for the fastlane actions
        with:
          lane: upload_to_google_play_store #Here you can define the lane need to be executed with the work flow.
          subdirectory: 'android' #mention if the fastlane folder is inside the android folder.
  final:
    name: final action
    needs: [upload_to_google, beta_apk]
    runs-on: ubuntu-latest
    steps:
      - name: Send message about start
        run: curl -s -X POST https://api.telegram.org/${{secrets.TELEGRAM_BOT}}/sendMessage -d chat_id=-569985592 -d parse_mode='HTML' -d text='Finish'
